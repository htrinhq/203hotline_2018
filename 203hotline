#!/usr/bin/env python3
##
## EPITECH PROJECT, 2019
## 202unsold_2018
## File description:
## 203hotline
##

from sys import argv, stderr
from math import factorial

def error():
    """Error message, on error output"""
    stderr.write("INVALID ARGUMENT\n")
    exit(84)

def binomial_coefficient(n: int, k: int):
    """Get the binomial coefficient of 2 values."""
    a = factorial(n)
    b = factorial(k)
    c = factorial(n - k)
    div = a // (b * c)
    return div

def hotline_two(data: [int]):
    """Hotline function with 2 args."""
    print('{:g}-combination of a {:g} set:' .format(data[1], data[0]))
    print('{:d}' .format(binomial_coefficient(data[0], data[1])))

def hotline_one(data: int):
    """Hotline function with 1 arg."""
    pass

def usage():
    """Print the helper in the standard output."""
    print('USAGE\n\t./203hotline [n k | d]')
    print('\nDESCRIPTION\n\tn\t\x1B[3mn\x1B[23m value for the computation of (n k)')
    print('\tk\t\x1B[3mk\x1B[23m value for the computation of (n k)')
    print('\td\taverage duration of calls (in seconds)')

if __name__ == "__main__":
    if len(argv) == 2 and argv[1] == "-h":
        usage()
    elif len(argv) == 2 and argv[1].isnumeric():
        data = int(argv[1])
        hotline_one(data)
    elif len(argv) == 3 and argv[1].isnumeric() and argv[2].isnumeric():
        data = [int(argv[1]), int(argv[2])]
        hotline_two(data)
    else:
        error()
